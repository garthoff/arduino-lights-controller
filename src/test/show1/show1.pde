int i = 0;
int control;
void setup() {                
  // initialize the digital pin as an output.
  // Pin 13 has an LED connected on most Arduino boards:
  pinMode(13, OUTPUT);    
  pinMode(12, OUTPUT); 
  pinMode(11, OUTPUT); 
  pinMode(10, OUTPUT); 
  pinMode(9, OUTPUT); 
  pinMode(8, OUTPUT); 
  pinMode(7, OUTPUT); 
  pinMode(6, OUTPUT); 
  pinMode(5, OUTPUT); 
  pinMode(4, OUTPUT); 
  pinMode(3, OUTPUT); 
  pinMode(2, OUTPUT); 
  pinMode(1, OUTPUT); 
  pinMode(0, OUTPUT); 

   
}

void loop() {
     
flipPins(0);
delay(3000);
flipPins(4);
delay(300);
flipPins(0);
delay(400);
flipPins(8);
delay(300);
flipPins(0);
delay(300);
flipPins(8195);
delay(300);
flipPins(0);
delay(300);
flipPins(256);
delay(400);
flipPins(384);
delay(200);
flipPins(128);
delay(500);
flipPins(0);
delay(400);
flipPins(256);
delay(300);
flipPins(384);
delay(200);
flipPins(128);
delay(200);
flipPins(192);
delay(300);
flipPins(64);
delay(500);
flipPins(0);
delay(200);
flipPins(64);
delay(200);
flipPins(0);
delay(200);
flipPins(64);
delay(200);
flipPins(0);
delay(200);
flipPins(64);
delay(200);
flipPins(0);
delay(200);
flipPins(64);
delay(200);
flipPins(0);
delay(200);
flipPins(64);
delay(400);
flipPins(128);
delay(200);
flipPins(384);
delay(200);
flipPins(256);
delay(700);
flipPins(0);
delay(1100);
flipPins(128);
delay(400);
flipPins(0);
delay(200);
flipPins(64);
delay(300);
flipPins(0);
delay(200);
flipPins(256);
delay(300);
flipPins(0);
delay(400);
flipPins(128);
delay(300);
flipPins(0);
delay(300);
flipPins(64);
delay(200);
flipPins(0);
delay(5500);
flipPins(4);
delay(400);
flipPins(8);
delay(200);
flipPins(264);
delay(200);
flipPins(256);
delay(200);
flipPins(8451);
delay(200);
flipPins(384);
delay(200);
flipPins(128);
delay(400);
flipPins(0);
delay(700);
flipPins(256);
delay(400);
flipPins(0);
delay(200);
flipPins(128);
delay(400);
flipPins(0);
delay(400);
flipPins(64);
delay(300);
flipPins(0);
delay(300);
flipPins(8195);
delay(200);
flipPins(0);
delay(400);
flipPins(4);
delay(300);
flipPins(0);
delay(300);
flipPins(8);
delay(200);
flipPins(8203);
delay(200);
flipPins(8227);
delay(200);
flipPins(32);
delay(300);
flipPins(4);
delay(400);
flipPins(0);
delay(500);
flipPins(256);
delay(200);
flipPins(384);
delay(200);
flipPins(128);
delay(200);
flipPins(192);
delay(200);
flipPins(64);
delay(200);
flipPins(96);
delay(200);
flipPins(32);
delay(200);
flipPins(4);
delay(300);
flipPins(264);
delay(200);
flipPins(8451);
delay(200);
flipPins(128);
delay(200);
flipPins(0);
delay(200);
flipPins(64);
delay(200);
flipPins(0);
delay(200);
flipPins(64);
delay(400);
flipPins(0);
delay(200);
flipPins(4);
delay(300);
flipPins(12);
delay(200);
flipPins(264);
delay(200);
flipPins(8459);
delay(200);
flipPins(8323);
delay(200);
flipPins(160);
delay(200);
flipPins(192);
delay(200);
flipPins(64);
delay(200);
flipPins(0);
delay(200);
flipPins(4);
delay(200);
flipPins(260);
delay(200);
flipPins(264);
delay(200);
flipPins(8323);
delay(200);
flipPins(192);
delay(200);
flipPins(64);
delay(200);
flipPins(0);
delay(300);
flipPins(256);
delay(200);
flipPins(0);
delay(400);
flipPins(256);
delay(300);
flipPins(0);
delay(400);
flipPins(128);
delay(400);
flipPins(64);
delay(300);
flipPins(0);
delay(400);
flipPins(256);
delay(300);
flipPins(0);
delay(400);
flipPins(256);
delay(200);
flipPins(0);
delay(400);
flipPins(128);
delay(300);
flipPins(0);
delay(300);
flipPins(8259);
delay(300);
flipPins(0);
delay(300);
flipPins(4);
delay(300);
flipPins(268);
delay(200);
flipPins(264);
delay(200);
flipPins(8331);
delay(200);
flipPins(8323);
delay(200);
flipPins(160);
delay(200);
flipPins(96);
delay(300);
flipPins(4);
delay(300);
flipPins(260);
delay(200);
flipPins(268);
delay(200);
flipPins(8587);
delay(200);
flipPins(8355);
delay(200);
flipPins(224);
delay(200);
flipPins(100);
delay(200);
flipPins(4);
delay(200);
flipPins(268);
delay(200);
flipPins(8355);
delay(200);
flipPins(32);
delay(200);
flipPins(0);
delay(700);
flipPins(256);
delay(400);
flipPins(0);
delay(200);
flipPins(128);
delay(200);
flipPins(136);
delay(300);
flipPins(8331);
delay(200);
flipPins(8291);
delay(200);
flipPins(96);
delay(200);
flipPins(292);
delay(200);
flipPins(268);
delay(200);
flipPins(396);
delay(200);
flipPins(8331);
delay(200);
flipPins(8419);
delay(200);
flipPins(96);
delay(200);
flipPins(260);
delay(200);
flipPins(268);
delay(200);
flipPins(8459);
delay(200);
flipPins(8395);
delay(200);
flipPins(8227);
delay(200);
flipPins(0);
delay(300);
flipPins(64);
delay(200);
flipPins(0);
delay(400);
flipPins(256);
delay(200);
flipPins(0);
delay(600);
flipPins(8195);
delay(800);
flipPins(8323);
delay(200);
flipPins(8227);
delay(300);
flipPins(8259);
delay(400);
flipPins(8451);
delay(500);
flipPins(8323);
delay(400);
flipPins(32);
delay(400);
flipPins(64);
delay(400);
flipPins(256);
delay(400);
flipPins(2176);
delay(200);
flipPins(4224);
delay(300);
flipPins(1184);
delay(200);
flipPins(4256);
delay(300);
flipPins(2144);
delay(200);
flipPins(608);
delay(300);
flipPins(2368);
delay(300);
flipPins(4416);
delay(200);
flipPins(1408);
delay(300);
flipPins(4480);
delay(200);
flipPins(10371);
delay(300);
flipPins(8835);
delay(200);
flipPins(10403);
delay(300);
flipPins(12451);
delay(200);
flipPins(9315);
delay(200);
flipPins(9571);
delay(200);
flipPins(12387);
delay(200);
flipPins(10563);
delay(200);
flipPins(10307);
delay(200);
flipPins(9027);
delay(200);
flipPins(10627);
delay(300);
flipPins(12675);
delay(200);
flipPins(9635);
delay(300);
flipPins(12707);
delay(200);
flipPins(10339);
delay(200);
flipPins(10275);
delay(200);
flipPins(8935);
delay(200);
flipPins(10599);
delay(200);
flipPins(10595);
delay(200);
flipPins(12643);
delay(200);
flipPins(9671);
delay(200);
flipPins(9667);
delay(200);
flipPins(12739);
delay(200);
flipPins(10663);
delay(200);
flipPins(10659);
delay(200);
flipPins(9123);
delay(200);
flipPins(10471);
delay(200);
flipPins(10467);
delay(200);
flipPins(12515);
delay(200);
flipPins(9571);
delay(200);
flipPins(9575);
delay(200);
flipPins(12643);
delay(300);
flipPins(10691);
delay(200);
flipPins(9155);
delay(300);
flipPins(10371);
delay(200);
flipPins(12419);
delay(300);
flipPins(9251);
delay(200);
flipPins(12323);
delay(200);
flipPins(12583);
delay(200);
flipPins(10311);
delay(200);
flipPins(8783);
delay(200);
flipPins(8907);
delay(200);
flipPins(10539);
delay(200);
flipPins(4352);
delay(200);
flipPins(4356);
delay(200);
flipPins(1420);
delay(200);
flipPins(12427);
delay(200);
flipPins(12451);
delay(200);
flipPins(2148);
delay(200);
flipPins(548);
delay(200);
flipPins(556);
delay(200);
flipPins(10603);
delay(200);
flipPins(4160);
delay(300);
flipPins(1280);
delay(200);
flipPins(4356);
delay(300);
flipPins(2444);
delay(200);
flipPins(8843);
delay(200);
flipPins(8875);
delay(200);
flipPins(2272);
delay(200);
flipPins(4260);
delay(200);
flipPins(4100);
delay(200);
flipPins(9327);
delay(200);
flipPins(12395);
delay(200);
flipPins(4192);
delay(200);
flipPins(2372);
delay(200);
flipPins(780);
delay(200);
flipPins(8975);
delay(200);
flipPins(10403);
delay(200);
flipPins(4484);
delay(200);
flipPins(4492);
delay(200);
flipPins(9391);
delay(200);
flipPins(4224);
delay(200);
flipPins(4228);
delay(200);
flipPins(2212);
delay(200);
flipPins(684);
delay(200);
flipPins(8879);
delay(200);
flipPins(10347);
delay(200);
flipPins(4192);
delay(200);
flipPins(4164);
delay(200);
flipPins(1356);
delay(200);
flipPins(12623);
delay(200);
flipPins(12779);
delay(200);
flipPins(10371);
delay(200);
flipPins(772);
delay(200);
flipPins(780);
delay(200);
flipPins(2472);
delay(200);
flipPins(12707);
delay(200);
flipPins(4192);
delay(200);
flipPins(1156);
delay(200);
flipPins(4332);
delay(200);
flipPins(4584);
delay(200);
flipPins(10347);
delay(200);
flipPins(9059);
delay(200);
flipPins(868);
delay(200);
flipPins(2500);
delay(200);
flipPins(4556);
delay(300);
flipPins(1452);
delay(200);
flipPins(4520);
delay(200);
flipPins(4264);
delay(200);
flipPins(2280);
delay(200);
flipPins(1000);
delay(300);
flipPins(2408);
delay(200);
flipPins(4200);
delay(200);
flipPins(4456);
delay(200);
flipPins(1224);
delay(200);
flipPins(4552);
delay(300);
flipPins(2184);
delay(200);
flipPins(648);
delay(300);
flipPins(2088);
delay(200);
flipPins(4136);
delay(200);
flipPins(4128);
delay(200);
flipPins(1088);
delay(200);
flipPins(4168);
delay(300);
flipPins(2304);
delay(200);
flipPins(768);
delay(200);
flipPins(776);
delay(200);
flipPins(2184);
delay(200);
flipPins(4224);
delay(300);
flipPins(1064);
delay(200);
flipPins(4136);
delay(300);
flipPins(2112);
delay(200);
flipPins(512);
delay(300);
flipPins(2048);
delay(200);
flipPins(4096);
delay(300);
flipPins(1088);
delay(200);
flipPins(4352);
delay(300);
flipPins(256);
delay(200);
flipPins(128);
delay(300);
flipPins(2176);
delay(300);
flipPins(160);
delay(300);
flipPins(164);
delay(200);
flipPins(100);
delay(300);
flipPins(96);
delay(200);
flipPins(320);
delay(200);
flipPins(832);
delay(300);
flipPins(2432);
delay(200);
flipPins(4096);
delay(200);
flipPins(4100);
delay(200);
flipPins(1028);
delay(200);
flipPins(4108);
delay(200);
flipPins(12555);
delay(200);
flipPins(10635);
delay(200);
flipPins(8931);
delay(200);
flipPins(608);
delay(200);
flipPins(2052);
delay(200);
flipPins(4100);
delay(300);
flipPins(1028);
delay(200);
flipPins(4104);
delay(300);
flipPins(10251);
delay(200);
flipPins(8707);
delay(200);
flipPins(8739);
delay(200);
flipPins(2080);
delay(200);
flipPins(4128);
delay(200);
flipPins(4096);
delay(200);
flipPins(1024);
delay(200);
flipPins(4096);
delay(300);
flipPins(2048);
delay(200);
flipPins(512);
delay(300);
flipPins(2048);
delay(200);
flipPins(4096);
delay(300);
flipPins(1024);
delay(300);
flipPins(4096);
delay(200);
flipPins(2048);
delay(200);
flipPins(512);
delay(300);
flipPins(2432);
delay(200);
flipPins(4224);
delay(300);
flipPins(1152);
delay(200);
flipPins(4256);
delay(300);
flipPins(160);
delay(300);
flipPins(96);
delay(400);
flipPins(320);
delay(400);
flipPins(384);
delay(400);
flipPins(416);
delay(400);
flipPins(224);
delay(400);
flipPins(352);
delay(400);
flipPins(448);
delay(400);
flipPins(416);
delay(400);
flipPins(96);
delay(300);
flipPins(160);
delay(200);
flipPins(352);
delay(400);
flipPins(448);
delay(200);
flipPins(452);
delay(300);
flipPins(132);
delay(400);
flipPins(36);
delay(300);
flipPins(2084);
delay(200);
flipPins(580);
delay(300);
flipPins(2116);
delay(200);
flipPins(260);
delay(200);
flipPins(256);
delay(200);
flipPins(128);
delay(200);
flipPins(132);
delay(400);
flipPins(36);
delay(200);
flipPins(4132);
delay(300);
flipPins(1088);
delay(200);
flipPins(4160);
delay(200);
flipPins(4164);
delay(200);
flipPins(772);
delay(300);
flipPins(2180);
delay(200);
flipPins(4228);
delay(300);
flipPins(1196);
delay(200);
flipPins(4268);
delay(300);
flipPins(2156);
delay(200);
flipPins(616);
delay(200);
flipPins(608);
delay(200);
flipPins(2376);
delay(200);
flipPins(4416);
delay(300);
flipPins(1408);
delay(200);
flipPins(4488);
delay(300);
flipPins(10379);
delay(300);
flipPins(8835);
delay(200);
flipPins(10403);
delay(200);
flipPins(4256);
delay(200);
flipPins(12451);
delay(200);
flipPins(9315);
delay(200);
flipPins(4192);
delay(300);
flipPins(2368);
delay(200);
flipPins(9027);
delay(200);
flipPins(832);
delay(200);
flipPins(10627);
delay(200);
flipPins(12675);
delay(200);
flipPins(4480);
delay(200);
flipPins(1440);
delay(200);
flipPins(1444);
delay(200);
flipPins(4516);
delay(200);
flipPins(2284);
delay(300);
flipPins(748);
delay(200);
flipPins(2412);
delay(200);
flipPins(10607);
delay(200);
flipPins(12651);
delay(200);
flipPins(9667);
delay(200);
flipPins(1472);
delay(200);
flipPins(4548);
delay(200);
flipPins(2476);
delay(300);
flipPins(936);
delay(200);
flipPins(2272);
delay(300);
flipPins(4320);
delay(200);
flipPins(1384);
delay(300);
flipPins(4452);
delay(200);
flipPins(2500);
delay(200);
flipPins(2508);
delay(200);
flipPins(972);
delay(200);
flipPins(2188);
delay(200);
flipPins(10383);
delay(200);
flipPins(12427);
delay(200);
flipPins(9251);
delay(300);
flipPins(4128);
delay(200);
flipPins(10307);
delay(200);
flipPins(2112);
delay(200);
flipPins(8771);
delay(200);
flipPins(2304);
delay(300);
flipPins(4352);
delay(200);
flipPins(1152);
delay(300);
flipPins(12419);
delay(200);
flipPins(2080);
delay(300);
flipPins(548);
delay(200);
flipPins(2116);
delay(300);
flipPins(4168);
delay(200);
flipPins(1288);
delay(300);
flipPins(12555);
delay(200);
flipPins(12547);
delay(200);
flipPins(2176);
delay(200);
flipPins(644);
delay(300);
flipPins(2220);
delay(200);
flipPins(12459);
delay(200);
flipPins(12451);
delay(200);
flipPins(1124);
delay(200);
flipPins(4204);
delay(200);
flipPins(10571);
delay(200);
flipPins(2368);
delay(200);
flipPins(836);
delay(200);
flipPins(2444);
delay(200);
flipPins(10635);
delay(200);
flipPins(4480);
delay(200);
flipPins(1152);
delay(200);
flipPins(1156);
delay(200);
flipPins(4228);
delay(200);
flipPins(2220);
delay(200);
flipPins(10411);
delay(200);
flipPins(8867);
delay(200);
flipPins(672);
delay(200);
flipPins(2144);
delay(200);
flipPins(4196);
delay(200);
flipPins(4204);
delay(200);
flipPins(9547);
delay(200);
flipPins(12611);
delay(200);
flipPins(4416);
delay(200);
flipPins(2436);
delay(200);
flipPins(908);
delay(200);
flipPins(904);
delay(200);
flipPins(2464);
delay(200);
flipPins(4512);
delay(300);
flipPins(1248);
delay(200);
flipPins(4320);
delay(300);
flipPins(2400);
delay(200);
flipPins(864);
delay(300);
flipPins(2496);
delay(200);
flipPins(4544);
delay(300);
flipPins(1440);
delay(200);
flipPins(4512);
delay(300);
flipPins(2272);
delay(200);
flipPins(736);
delay(300);
flipPins(2400);
delay(200);
flipPins(4448);
delay(300);
flipPins(1472);
delay(200);
flipPins(4544);
delay(300);
flipPins(2176);
delay(200);
flipPins(640);
delay(300);
flipPins(2080);
delay(300);
flipPins(4128);
delay(200);
flipPins(1088);
delay(300);
flipPins(4160);
delay(200);
flipPins(2304);
delay(300);
flipPins(768);
delay(200);
flipPins(2176);
delay(300);
flipPins(4224);
delay(200);
flipPins(1056);
}

void flipPins( int control ){
       flip(  control, 8192,13  );
       flip(  control, 4096,12  );
       flip(  control, 2048,11  );
       flip(  control, 1024,10  );
       flip(  control, 512,9  );
       flip(  control, 256,8  );
       flip(  control, 128,7  );
       flip(  control, 64,6  );
       flip(  control, 32,5  );
       flip(  control, 16,4  );
       flip(  control, 8,3  );
       flip(  control, 4,2  );
       flip(  control, 2,1  );
       flip(  control, 1,0  );
}

void flip( int c, int check, int p) {
       //Serial.print("pin: ");
       //Serial.println(p, DEC);
      // Serial.println(check, DEC);
      if(  (c & check) > 0  ){
         digitalWrite( p, HIGH);
          //Serial.print("H");
       }else{
         digitalWrite( p, LOW);
         //Serial.print("L");
       }
}

int readInput(){
  Serial.available();
  return Serial.read();
}

int toInt( int c, int m ){
   return (c-48)*m;
}